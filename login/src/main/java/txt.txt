쿠키에는 영속 쿠키와 세션 쿠키가 있다.
- 영속 쿠키 : 만료 날짜를 입력하면 해당 날짜까지 유지
- 세션 쿠키 : 만료 날짜를 생각하면 브라우저 종료시 까지만 유지


쿠키의 보안 문제
- 쿠키의 값은 임의로 변경할 수 있다.
    - 클라이언트가 쿠키를 강제로 변경하면 다른 사용자가 된다.
    - 웹브라우저 개발자모드 -> application -> Cookie 변경할 수 있음.
- 쿠키에 보관된 정보는 훔쳐갈 수 있다.
    - 만약 쿠키에 개인정보, 신용카드 정보 있다면?
    - 이 정보가 웹 브라우저에도 보관되고, 네트워크 요청마다 계속 클라이언트에서 서버로 전달된다.
    - 쿠키의 정보나 나의 로컬 pc가 털릴 수 있고, 네트워크 전송 구간에서 털릴 수도 있다.
- 해커가 쿠키를 한번 훔쳐가면 평생 사용할 수 있다.
    - 해커가 쿠키를 훔쳐가서 그 쿠키로 악의적인 요청을 계속 시도할 수 있다.

"대안"
- 쿠키에 중요한 값을 노출하지 않고, 사용자 별로 예측 불가능한 임의의 토큰(랜덤 값)을 노출하고, 서버에서 토큰과 사용자 id를 매핑해서 인식한다. 그리고 서버에서 관리한다.
- 토큰은 해커가 임의의 값을 넣어도 찾을 수 없도로 예상 불가능 해야 한다.
- 해커가 토큰을 털어가도 시간이 지나면 사용할 수 없도록 서버에서 해당 토큰의 만료시간을 짧게 유지한다. 또는 해킹이 의심되는 경우 서버에서 해당 토큰을 강제로 제거하면 된다.


쿠키에 중요한 정보를 보관하는 방법은 여러가지 보안 이슈가 있었다. 이 문제를 해결하려면 결국 중요한 정보를 모두 서버에 저장해야한다.
그리고 클라이언트와 서버는 추정 불가능한 임의의 식별자 값으로 연결해야 한다.

이렇게 서버에 중요한 정보를 보관하고 연결을 유지하는 방법을 "세션"이라 한다.

세션을 사용해서 중요한 정보를 관리하면 다음과 같은 보안 문제들을 해결할 수 있다.
- 예상 불가능한 복잡한 세션 ID를 사용한다.
- 세션 ID가 털려도 여기에는 중요한 정보가 없다.
- 세션이 털려도 시간이 지나면 사용할 수 없도록 세션의 만료시간을 짧게 유지한다. 또한 해킹이 의심이되는 경우 서버에서 해당 세션을 강제로 제거하면 된다.

세션에 대해서 깊이 있게 이해를 하려면 직접 만들어 보는것도 좋은 방법이다.

세션 관리는 크게 다음 3가지 기능을 제공하면 됩니다.

- 세션 생성
    - sessionId 생성 (임의의 추정 불가능한 랜덤 값)
    - 세션 저장소에 sessionId와 보관할 값 저장
    - sesssionId로 응답 쿠키를 생성해서 클라이언트에 전달
- 세션 조회
    - 클라이언트가 요청한 sessionId 쿠키의 값으로, 세션 저장소에 보관할 값 조회
- 세션 만료
    - 클라이언트가 요청한 sessionId 쿠키의 값으로, 세션 저장소에 보관한 sessionId와 값 제거
